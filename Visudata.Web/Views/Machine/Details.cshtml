@using PI.Domain.ViewModel.Machine;
@model MachineDetailsViewModel
<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VisuData</title>

    <!-- Icone da aba -->
    <link rel="shortcut icon" href="~/assets/Img/favicon-white.ico" type="image/x-icon" />

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link href="~/assets/styles/info.css" />
    <link href="~/assets/Icons/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>


</head>
<body>
    <header>
        <div class="row">
            <div class="col ">
                <a href="~/home/index.html">
                    <img src="~/assets/icons/SVGIcons/volta-2.svg" alt="voltar">
                </a>
            </div>
            <div class="col titleInfo ">@Model.Model</div>
            <div class="col ">
                <a href="./Edit.html">
                    <img id="imgEdit" src="~/assets/Icons/SVGIcons/edit.svg" alt="editar">
                </a>
            </div>
        </div>
    </header>
    <main>
        <div class="container text-center">
            <div class="row row-cols-3">
                <!-- Não remover os espaços do span-->
                <div class="col">Temperatura</div>
                <div class="col">Ruído</div>
                <div class="col">Vibração</div>
                <!-- apenas alterar o final da class do span -->
                <div class="col">
                    @Model.RealTimeTemp.ToString() ºC
                    <span class="@Model.TempStyle.ToString()"> </span>
                </div>
                <div class="col">
                    @Model.RealTimeNoise.ToString() Hz
                    <span class="@Model.NoiseStyle.ToString()"> </span>
                </div>
                <div class="col">
                    @Model.RealTimeVibration.ToString() dB
                    <span class="@Model.VibrationStyle.ToString()"> </span>
                </div>
            </div>
        </div>
        <div>
            <canvas id="chart-line" height="320" width="400">
            </canvas>
        </div>
        <div class="container text-center">
            <div class="row input-group-text" style="background-color: #CCCCCC;">
                <div class="col">
                    <input class="form-check-input mt-1 " type="checkbox" value="temperatura" aria-label="Checkbox for following text input">
                    Temperatura
                </div>
                <div class="col">
                    <input class="form-check-input mt-1" type="checkbox" value="ruido" aria-label="Checkbox for following text input">
                    Ruído
                </div>
                <div class="col">
                    <input class="form-check-input mt-1" type="checkbox" value="vibracao" aria-label="Checkbox for following text input">
                    Vibração
                </div>
            </div>
        </div>
    </main>
    <footer>
        <div class=" text-center">
            <div class=" container text-center ">
                <div class="row">
                    <div class="col statusAction">
                        @*                        <a class="btn btn-primary" style="height:50%; width:50%">Tempo Real</a
                        @*                        <span class="badge badge-primary">Tempo real</span>*@
                        <span class="badge badge-primary">ROlo dodid</span>
                    </div>
                    <div class="col statusAction">
                        <span class="badge text-bg--blue-color-bg button ">Histórico</span>
                    </div>
                    <div class="col statusAction">
                        <span class="badge text-bg--blue-color-bg button ">Exportar</span>
                    </div>
                </div>
            </div>
            <div class="row-cols-1 container">
                <div class="container text-center">
                    <div class="row">
                        <div class="col statusEspe">Marca: <br> @Model.Brand</div>
                        <div class="col statusEspe">Modelo: <br> @Model.Model</div>
                        <div class="col statusEspe">Série: @Model.SerialNumber</div>
                    </div>
                    <div class="row">
                        <div class="col statusEspe">Tag: <br> @Model.Tag.ToString()</div>
                        <div class="col statusEspe">Categoria: <br> @Model.Category</div>
                        <div class="col statusEspe">
                            Status: <br> @Model.StatusName
                            <span class="badge text-bg-warning"> </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
</body>
</html>


<!-- <script src="~/node_modules/chart.js/dist/chart.umd.js"></script> -->
@*<script type="module" src="/Visudata.Web/wwwroot/lib/chart.js/dist/chart.umd.js"></script>
<script type="module" src="/Visudata.Web/wwwroot/lib/chart.js/dist/chart.js"> </script>*@
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

    const ctx = document.getElementById('chart-line');
    console.log(ctx);
    $.ajax({
        type: 'GET',
        URL: 'machine/DetailsAboutMachineAjaxHandler/1&status=temperatura',
        data: JSON,
        success: function (response) {
            console.log(response);
        }
    });
    const data = {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
            axis: 'y',
            label: 'My First Dataset',
            data: [65, 59, 80, 81, 56, 55, 40],
            fill: false,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(255, 205, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(201, 203, 207, 0.2)'
            ],
            borderColor: [
                'rgb(255, 99, 132)',
                'rgb(255, 159, 64)',
                'rgb(255, 205, 86)',
                'rgb(75, 192, 192)',
                'rgb(54, 162, 235)',
                'rgb(153, 102, 255)',
                'rgb(201, 203, 207)'
            ],
            borderWidth: 1
        }]
    };
</script>