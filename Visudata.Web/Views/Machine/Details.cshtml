@using PI.Domain.ViewModel.Machine;
@model MachineDetailsViewModel
<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VisuData</title>

    <!-- Icone da aba -->
    <link rel="shortcut icon" href="~/assets/Img/favicon-white.ico" type="image/x-icon" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link rel="stylesheet" href="~/assets/styles/info.css">
    <link href="~/assets/Icons/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />

</head>
<body>
    <header>
        <div class="row">
            <div class="col ">
                <a asp-action="Home" asp-controller="Enterprise">
                    <img src="~/assets/icons/SVGIcons/volta-2.svg" alt="voltar">
                </a>
            </div>
            <div class="col titleInfo ">Modelo: @Model.Model</div>
            <div class="col ">
                <a asp-action="Edit" asp-route-id="@Model.Id">
                    <img id="imgEdit" src="~/assets/icons/SVGIcons/edit.svg" alt="editar">
                </a>
            </div>
        </div>

    </header>
    <main>
        <div class="container text-center">
            <div class="row row-cols-3">
                <!-- Não remover os espaços do span-->
                <div class="col">Temperatura</div>
                <div class="col">Ruído</div>
                <div class="col">Vibração</div>
                <!-- apenas alterar o final da class do span -->
                <div class="col">
                    @Model.RealTimeTemp ºC
                    <span class="@Model.TempStyle.ToString()"> </span>
                </div>
                <div class="col">
                    @Model.RealTimeNoise Hz
                    <span class="@Model.NoiseStyle.ToString()"> </span>
                </div>
                <div class="col">
                    @Model.RealTimeVibration dB
                    <span class="@Model.VibrationStyle.ToString()"> </span>
                </div>
            </div>
        </div>
        <div>
            <canvas id="chart-line" height="320" width="400">
            </canvas>
        </div>
        <div class="container text-center">
            <div class="row input-group-text" style="background-color: #CCCCCC;">
                <div class="col">
                    <input class="form-check-input mt-1 " type="checkbox" id="tempCheckbox" value="temperatura" aria-label="Checkbox for following text input">
                    Temperatura
                </div>
                <div class="col">
                    <input class="form-check-input mt-1" type="checkbox" value="ruido" id="noiseCheckbox" aria-label="Checkbox for following text input">
                    Ruído
                </div>
                <div class="col">
                    <input class="form-check-input mt-1" id="vibrationCheckbox" type="checkbox" value="vibracao" aria-label="Checkbox for following text input">
                    Vibração
                </div>
            </div>
        </div
    </main>
    <footer>
        <div class=" text-center">
            <div class=" container text-center ">
                <div class="row">
                    <div class="col statusAction">
                        <span class="badge text-bg--blue-color-bg button ">Tempo real</span>
                    </div>
                    <div class="col statusAction">
                        <span class="badge text-bg--blue-color-bg button ">Histórico</span>
                    </div>
                    <div class="col statusAction">
                        <a asp-action="DownloadLogDataOfMachine" asp-route-id="@Model.Id">
                            <span class="badge text-bg--blue-color-bg button ">Exportar</span>
                        </a>
                    </div>
                </div>
            </div>
            <div class="row-cols-1 container">
                <div class="container text-center">
                    <div class="row">
                        <div class="col statusEspe">Marca: <br> @Model.Brand</div>
                        <div class="col statusEspe">Modelo: <br> @Model.Model</div>
                        <div class="col statusEspe">Série: @Model.SerialNumber</div>
                    </div>
                    <div class="row">
                        <div class="col statusEspe">Tag: <br> @Model.Tag</div>
                        <div class="col statusEspe">Categoria: <br> @Model.Category</div>
                        <div class="col statusEspe">
                            Status: <br> @Model.StatusName
                            <span class="@Model.StatusNameStyle.ToString()"> </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
</body>
</html>


<!-- <script src="../node_modules/chart.js/dist/chart.umd.js"></script> -->
<script type="module" src="~/lib/chart.js/dist/chart.umd.js"></script>
<script type="module" src="~/lib/chart.js/dist/chart.js"> </script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

    const ctx = document.getElementById('chart-line');
    //console.log(ctx);
    //$.ajax({
    //    type: 'GET',
    //    URL: 'machine/DetailsAboutMachineAjaxHandler/1?status=temperatura',
    //    dataType: "json",
    //    success: function (response) {
    //        console.log(response);
    //    }
    //});
    //const data = {
    //    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
    //    datasets: [{
    //        axis: 'y',
    //        label: 'My First Dataset',
    //        data: [65, 59, 80, 81, 56, 55, 40],
    //        fill: false,
    //        backgroundColor: [
    //            'rgba(255, 99, 132, 0.2)',
    //            'rgba(255, 159, 64, 0.2)',
    //            'rgba(255, 205, 86, 0.2)',
    //            'rgba(75, 192, 192, 0.2)',
    //            'rgba(54, 162, 235, 0.2)',
    //            'rgba(153, 102, 255, 0.2)',
    //            'rgba(201, 203, 207, 0.2)'
    //        ],
    //        borderColor: [
    //            'rgb(255, 99, 132)',
    //            'rgb(255, 159, 64)',
    //            'rgb(255, 205, 86)',
    //            'rgb(75, 192, 192)',
    //            'rgb(54, 162, 235)',
    //            'rgb(153, 102, 255)',
    //            'rgb(201, 203, 207)'
    //        ],
    //        borderWidth: 1
    //    }]
    //};


    $("#tempCheckbox").click(function(){
        if($(this).is(':checked'))
        {
            $.ajax({
                type: "GET",
                url: "/machine/DetailsAboutTempAjaxHandler/"+@Model.Id.ToString(),
                success: function(response){
                    console.log(response);
                }
            });
            //const response =  fetch('/machine/DetailsAboutTempAjaxHandler/'+@Model.Id.ToString());
            //const datapoints =  response.json();
            //console.log(datapoints);

            fetch('/machine/DetailsAboutTempAjaxHandler/'+@Model.Id.ToString(), {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'content-type': 'application/json'
                }
            }).then(function(response){
                var result = response.json();
                let arrayLength = result.data.length;
                console.log(result.data);
                //const hours = result.data.graphicValues.map(function(index){
                //    return index.hour
                //});
                //console.log(hours);
                //console.log(result.data)
            });
        }
    });

</script>