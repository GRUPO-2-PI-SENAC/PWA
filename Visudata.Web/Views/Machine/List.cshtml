@using PI.Domain.ViewModel.Machine;
@model List<MachineForListViewModel>

@{
    Layout = "_Layout";
}

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Visudata</title>

    <!-- Icone da aba -->
    <link rel="shortcut icon" href="~/assets/Img/favicon-white.ico" type="image/x-icon" />

    <!-- CSS -->
    <link rel="stylesheet" href="~/assets/styles/list.css" />

</head>

<header>
    <div class="machineText ms-4 mt-3">
        <span>Lista de Máquinas</span>
    </div>
</header>


@if (Model.Count > 0)
{
    @foreach (MachineForListViewModel machine in Model)
    {
        <div class="container-fluid">
            <div class="card container maquinasSelect shadow-lg mt-4 mx-auto">
                <div class="card-header row">
                    Selecione a Maquina
                </div>
                <div class="row card-body d-flex align-content-between">
                    <h2 class="col-5 model card-title">@machine.Model</h2>
                    <h2 class="col-6 tag card-title">@machine.SerialNumber</h2>
                    <a asp-action="Details" class="col-1" asp-route-id="@machine.Id"><i class="bi bi-arrow-right"></i></a>
                </div>
                <div class="row card-footer statusMaquina">
                    <div class="col pe-2">
                        <div class="row">
                            <h5 class="col-8 num">@machine.Temp.ToString()ºC</h5>
                            <span class=" col badge text-bg-@machine.TempStyle.ToString()"> </span>
                        </div>
                    </div>
                    <div class="col pe-1">
                        <div class="row">
                            <h5 class="col-9 num">@machine.Noise.ToString()Hz</h5>
                            <span class="col badge text-bg-@machine.NoiseStyle.ToString()"> </span>
                        </div>
                    </div>
                    <div class="col">
                        <div class="row">
                            <h5 class="col-9 num">@machine.Vibration.ToString()dB</h5>
                            <span class="col badge text-bg-@machine.VibrationStyle.ToString()"> </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="container">
        <h2>Não há nenhuma máquina cadastrada no sistema!</h2>
    </div>
}

@if (TempData["message"] != null)
{

    if (TempData["typeMessage"] != null)
    {

        if (TempData["typeMessage"].ToString() == "error")
        {
            <div class="toast-container position-fixed bottom-0 mb-5 end-0 p-3 ">
                <div id="liveToast-danger" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header bg-danger">
                        <svg class="bi flex-shrink-0 me-2 svg-icon" role="img" aria-label="Danger:">
                            <use xlink:href="#exclamation-triangle-fill" />
                        </svg>
                        <p class="me-auto mt-3 text-light">@TempData["message"].ToString()</p>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"
                    aria-label="Close"></button>
                    </div>
                </div>
            </div>
        }

        if (TempData["typeMessage"].ToString() == "success")
        {
            <div class="toast-container position-fixed bottom-0 mb-5 end-0 p-3 ">
                <div id="liveToast-success" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header bg-success">
                        <svg class="bi flex-shrink-0 me-2 svg-icon" role="img" aria-label="Success:">
                            <use xlink:href="#check-circle-fill" />
                        </svg>
                        <p class="me-auto mt-3 text-light">@TempData["message"].ToString()</p>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            </div>
        }
    }


    <script>
        window.onload = function () {
            const myToast = new bootstrap.Toast('.toast');

            setTimeout(() => {
                myToast.show();
            }, 5000);
        }
    </script>
}

